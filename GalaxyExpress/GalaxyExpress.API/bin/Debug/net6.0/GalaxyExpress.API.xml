<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GalaxyExpress.API</name>
    </assembly>
    <members>
        <member name="T:GalaxyExpress.API.Controllers.EmailController">
            <summary>
            Email controller
            </summary>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.EmailController.#ctor(GalaxyExpress.BLL.Services.Interfaces.IEmailService,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Base constructor
            </summary>
            <param name="emailService">Email service</param>
            <param name="loggerFactory">Email logger factory</param>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.EmailController.GetAllEmailsAsync">
            <summary>
            Gets the list of all Emails
            </summary>
            <remarks>
            Sample request:
            GET galaxy-express/email
            </remarks>
            <returns>Returns list of GetDTO_Email</returns>
            <response code="200">Success</response>
            <response code="500">If it was not possible to get a list of elements from the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.EmailController.GetEmailByIdAsync(System.Guid)">
            <summary>
            Gets the Email by id
            </summary>
            <remarks>
            Sample request:
            GET galaxy-express/email/13ce1333-7b7c-4395-8565-0474a6ad05ad
            </remarks>
            <param name="id">Email id (Guid)</param>
            <returns>Returns element of GetDTO_Email</returns>
            <response code="200">Success</response>
            <response code="404">If the element with such ID is not found in the database</response>
            <response code="500">If it was not possible to get element from the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.EmailController.AddEmailAsync(GalaxyExpress.BLL.DTOs.EmailDTOs.InsertDTO_Email)">
            <summary>
            Creates new Email
            </summary>
            <remarks>
            Sample request:
            
                POST: galaxy-express/email
                {
                    "emailAddress": "string",
                    "userId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                }
            </remarks>
            <param name="newEntity">InsertDTO_Email newEntity</param>
            <returns>Returns id (Guid)</returns>
            <response code="200">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.EmailController.UpdateEmailAsync(GalaxyExpress.BLL.DTOs.EmailDTOs.UpdateDTO_Email)">
            <summary>
            Update the Email
            </summary>
            <remarks>
            Sample request:
            
                PUT: galaxy-express/email
                {
                    "emailId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "emailAddress": "string",
                    "userId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                }
            </remarks>
            <param name="updateEntity">UpdateDTO_Email updateEntity</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.EmailController.DeleteEmailAsync(System.Guid)">
            <summary>
            Delete the Email by id
            </summary>
            <remarks>
            Sample request:
            DELETE: galaxy-express/email/13ce1333-7b7c-4395-8565-0474a6ad05ad
            </remarks>
            <param name="id">Email id (Guid)</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="T:GalaxyExpress.API.Controllers.ParcelMachineController">
            <summary>
            ParcelMachine controller
            </summary>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.ParcelMachineController.#ctor(Microsoft.Extensions.Logging.ILogger{GalaxyExpress.API.Controllers.ParcelMachineController},GalaxyExpress.BLL.Services.Interfaces.IParcelMachineService)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="parcelMachineService"></param>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.ParcelMachineController.GetAllAsync(System.String)">
            <summary>
            Getting a list of parcel machines
            </summary>
            <param name="searchText"></param>
            <returns>List</returns>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.ParcelMachineController.DeleteAsync(System.Guid)">
            <summary>
            Remove parcel machine by Id from database
            </summary>
            <param name="id"></param>
            <returns>ServerResponse</returns>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.ParcelMachineController.CheckExistenceByParametersAsync(System.Int32,System.String,System.String)">
            <summary>
            Checking existence parcel machine in database
            </summary>
            <param name="parcelMachineNumber"></param>
            <param name="globalAddress"></param>
            <param name="localAddress"></param>
            <returns>ServerResponse</returns>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.ParcelMachineController.AddAsync(GalaxyExpress.BLL.DTOs.ParcelMachineDTOs.AddParcelMachineDto)">
            <summary>
            Add a new parcel machine in databases
            </summary>
            <param name="addParcelMachineDTO"></param>
            <returns>ServerResponse</returns>
        </member>
        <member name="T:GalaxyExpress.API.Controllers.PaymentCardController">
            <summary>
            paymentCard controller
            </summary>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PaymentCardController.#ctor(GalaxyExpress.BLL.Services.Interfaces.IPaymentCardService,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Base constructor
            </summary>
            <param name="paymentCardService">PaymentCard service</param>
            <param name="loggerFactory">PaymentCard logger factory</param>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PaymentCardController.GetAllPaymentCardsAsync">
            <summary>
            Gets the list of all PaymentCards
            </summary>
            <remarks>
            Sample request:
            GET galaxy-express/paymentCard
            </remarks>
            <returns>Returns list of GetDTO_PaymentCard</returns>
            <response code="200">Success</response>
            <response code="500">If it was not possible to get a list of elements from the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PaymentCardController.GetPaymentCardByIdAsync(System.Guid)">
            <summary>
            Gets the PaymentCard by id
            </summary>
            <remarks>
            Sample request:
            GET galaxy-express/paymentCard/13ce1333-7b7c-4395-8565-0474a6ad05ad
            </remarks>
            <param name="id">PaymentCard id (Guid)</param>
            <returns>Returns element of GetDTO_PaymentCard</returns>
            <response code="200">Success</response>
            <response code="404">If the element with such ID is not found in the database</response>
            <response code="500">If it was not possible to get element from the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PaymentCardController.AddPaymentCardAsync(GalaxyExpress.BLL.DTOs.PaymentCardDTOs.InsertDTO_PaymentCard)">
            <summary>
            Creates new PaymentCard
            </summary>
            <remarks>
            Sample request:
            
                POST: galaxy-express/paymentCard
                {
                    "paymentCard": "string",
                    "validity": "string",
                    "CVV": "string",
                    "userId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                }
            </remarks>
            <param name="newEntity">InsertDTO_PaymentCard newEntity</param>
            <returns>Returns id (Guid)</returns>
            <response code="200">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PaymentCardController.UpdatePaymentCardAsync(GalaxyExpress.BLL.DTOs.PaymentCardDTOs.UpdateDTO_PaymentCard)">
            <summary>
            Update the PaymentCard
            </summary>
            <remarks>
            Sample request:
            
                PUT: galaxy-express/paymentCard
                {
                    "PaymentCardId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "PaymentCardAddress": "string",
                    "userId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                }
            </remarks>
            <param name="updateEntity">UpdateDTO_PaymentCard updateEntity</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PaymentCardController.DeletePaymentCardAsync(System.Guid)">
            <summary>
            Delete the PaymentCard by id
            </summary>
            <remarks>
            Sample request:
            DELETE: galaxy-express/paymentCard/13ce1333-7b7c-4395-8565-0474a6ad05ad
            </remarks>
            <param name="id">PaymentCard id (Guid)</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="T:GalaxyExpress.API.Controllers.PhoneNumberController">
            <summary>
            PhoneNumber controller
            </summary>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PhoneNumberController.#ctor(GalaxyExpress.BLL.Services.Interfaces.IPhoneNumberService,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Base constructor
            </summary>
            <param name="phoneNumberService">PhoneNumber service</param>
            <param name="loggerFactory">PhoneNumber logger factory</param>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PhoneNumberController.GetAllPhoneNumbersAsync">
            <summary>
            Gets the list of all PhoneNumbers
            </summary>
            <remarks>
            Sample request:
            GET galaxy-express/phoneNumber
            </remarks>
            <returns>Returns list of GetDTO_PhoneNumber</returns>
            <response code="200">Success</response>
            <response code="500">If it was not possible to get a list of elements from the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PhoneNumberController.GetPhoneNumberByIdAsync(System.Guid)">
            <summary>
            Gets the PhoneNumber by id
            </summary>
            <remarks>
            Sample request:
            GET galaxy-express/phoneNumber/13ce1333-7b7c-4395-8565-0474a6ad05ad
            </remarks>
            <param name="id">PhoneNumber id (Guid)</param>
            <returns>Returns element of GetDTO_PhoneNumber</returns>
            <response code="200">Success</response>
            <response code="404">If the element with such ID is not found in the database</response>
            <response code="500">If it was not possible to get element from the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PhoneNumberController.AddPhoneNumberAsync(GalaxyExpress.BLL.DTOs.PhoneNumberDTOs.InsertDTO_PhoneNumber)">
            <summary>
            Creates new PhoneNumber
            </summary>
            <remarks>
            Sample request:
            
                POST: galaxy-express/phoneNumber
                {
                    "number": "string",
                    "userId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                }
            </remarks>
            <param name="newEntity">InsertDTO_PhoneNumber newEntity</param>
            <returns>Returns id (Guid)</returns>
            <response code="200">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PhoneNumberController.UpdatePhoneNumberAsync(GalaxyExpress.BLL.DTOs.PhoneNumberDTOs.UpdateDTO_PhoneNumber)">
            <summary>
            Update the PhoneNumber
            </summary>
            <remarks>
            Sample request:
            
                PUT: galaxy-express/phoneNumber
                {
                    "phoneNumberId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "number": "string",
                    "userId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                }
            </remarks>
            <param name="updateEntity">UpdateDTO_PhoneNumber updateEntity</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PhoneNumberController.DeletePhoneNumberAsync(System.Guid)">
            <summary>
            Delete the PhoneNumber by id
            </summary>
            <remarks>
            Sample request:
            DELETE: galaxy-express/phoneNumber/13ce1333-7b7c-4395-8565-0474a6ad05ad
            </remarks>
            <param name="id">PhoneNumber id (Guid)</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="T:GalaxyExpress.API.Controllers.PostBranchController">
            <summary>
            PostBranch controller
            </summary>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PostBranchController.#ctor(Microsoft.Extensions.Logging.ILogger{GalaxyExpress.API.Controllers.PostBranchController},GalaxyExpress.BLL.Services.Interfaces.IPostBranchService)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="postBranchService"></param>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PostBranchController.GetAllAsync(System.String)">
            <summary>
            Getting a list of post branches
            </summary>
            <param name="searchText"></param>
            <returns>List</returns>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PostBranchController.DeleteAsync(System.Guid)">
            <summary>
            Remove post branch by Id from database
            </summary>
            <param name="id"></param>
            <returns>ServerResponse</returns>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PostBranchController.CheckExistenceByParametersAsync(System.Int32,System.String,System.String)">
            <summary>
            Checking existence post branch in database
            </summary>
            <param name="parcelMachineNumber"></param>
            <param name="globalAddress"></param>
            <param name="localAddress"></param>
            <returns>ServerResponse</returns>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.PostBranchController.AddAsync(GalaxyExpress.BLL.DTOs.PostBranchDTOs.AddPostBranchDto)">
            <summary>
            Add a new post branch in databases
            </summary>
            <param name="addPostBranchDto"></param>
            <returns>ServerResponse</returns>
        </member>
        <member name="T:GalaxyExpress.API.Controllers.UserController">
            <summary>
            User controller
            </summary>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.UserController.#ctor(GalaxyExpress.BLL.Services.Interfaces.IUserService,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Base constructor
            </summary>
            <param name="userService">User service</param>
            <param name="loggerFactory">User logger factory</param>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.UserController.GetAllUsersAsync">
            <summary>
            Gets the list of all Users
            </summary>
            <remarks>
            Sample request:
            GET galaxy-express/user
            </remarks>
            <returns>Returns list of GetDTO_User</returns>
            <response code="200">Success</response>
            <response code="500">If it was not possible to get a list of elements from the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.UserController.GetUserByIdAsync(System.Guid)">
            <summary>
            Gets the User by id
            </summary>
            <remarks>
            Sample request:
            GET galaxy-express/user/13ce1333-7b7c-4395-8565-0474a6ad05ad
            </remarks>
            <param name="id">User id (Guid)</param>
            <returns>Returns element of GetDTO_User</returns>
            <response code="200">Success</response>
            <response code="404">If the element with such ID is not found in the database</response>
            <response code="500">If it was not possible to get element from the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.UserController.AddUserAsync(GalaxyExpress.BLL.DTOs.UserDTOs.InsertDTO_User)">
            <summary>
            Creates new User
            </summary>
            <remarks>
            Sample request:
            
                POST: galaxy-express/user
                {
                    "login": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "password": "string",
                    "fatherName": "string",
                    "birthday": "2024-04-11T09:47:23.592Z",
                    "sex": "string"
                }
            </remarks>
            <param name="newEntity">InsertDTO_User newEntity</param>
            <returns>Returns id (Guid)</returns>
            <response code="200">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.UserController.UpdateUserAsync(GalaxyExpress.BLL.DTOs.UserDTOs.UpdateDTO_User)">
            <summary>
            Update the User
            </summary>
            <remarks>
            Sample request:
            
                PUT: galaxy-express/user
                {
                    "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "values":
                    {
                        "Login": "string",
                        "FirstName": "string",
                        ...
                        "AdditionalPropN": "string",
                    }
                }
            </remarks>
            <param name="upEntity">UpdateDTO_User updateEntity</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.UserController.DeleteUserAsync(System.Guid)">
            <summary>
            Delete the User by id
            </summary>
            <remarks>
            Sample request:
            DELETE: galaxy-express/user/13ce1333-7b7c-4395-8565-0474a6ad05ad
            </remarks>
            <param name="id">User id (Guid)</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success</response>
            <response code="400">If invalid data entered</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.UserController.GetCountOfUsersAsync">
            <summary>
            Get count of entities in table Users, including deleted ones
            </summary>
            <remarks>
            Sample request:
            GET galaxy-express/user/count-with-delete
            </remarks>
            <returns>Count of entities in table Users, including deleted ones</returns>
            <response code="200">Success</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.UserController.GetCountOfUsersNotDeletedAsync">
            <summary>
            Get count of entities in table Users
            </summary>
            <remarks>
            Sample request:
            GET galaxy-express/user/count
            </remarks>
            <returns>Count of entities in table Users</returns>
            <response code="200">Success</response>
            <response code="500">If it was not possible to adding element to the database</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.UserController.GetSecuredData">
            <summary>
            Get secured data
            </summary>
            <remarks>
            Sample request:
            GET https://localhost:5001/galaxy-express/User/secure-data
            </remarks>
            <returns>Returns secured data</returns>
            <response code="200">Success</response>
            <response code="401">If user not authentication</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.UserController.RegisterAsync(GalaxyExpress.DAL.Entities.Identity.RegisterModel)">
            <summary>
            Registering new user
            </summary>
            <remarks>
            Sample request:
            
                POST https://localhost:4444/galaxy-express/User/register
                {
                    "PhoneNumber": "+1 00 (000) 00-00",
                    "Login": "John Snow",
                    "Password": "qwerty123",
                    "FirstName": "John",
                    "LastName": "Snow",
                    "FatherName": "Ned"
                }
            </remarks>
            <param name="model">RegisterModel for creating new user</param>
            <returns>Returns a message about successful user registration</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:GalaxyExpress.API.Controllers.UserController.GetTokenAsync(GalaxyExpress.DAL.Entities.Identity.LoginModel)">
            <summary>
            Get token
            </summary>
            <remarks>
            Sample request:
            
                POST https://localhost:4444/galaxy-express/User/token
                {
                    "Login": "John Snow",
                    "Password": "qwerty123"
                }
            </remarks>
            <returns>Returns JWT Security token</returns>
            <response code="200">Success</response>
        </member>
        <member name="T:GalaxyExpress.API.Mapping.Configurations.EmailConfiguration">
            <summary>
            Registration Email configurations
            </summary>
        </member>
        <member name="M:GalaxyExpress.API.Mapping.Configurations.EmailConfiguration.RegisterEmailConfig">
            <summary>
            Registration Email configuration
            </summary>
        </member>
        <member name="T:GalaxyExpress.API.Mapping.Configurations.MapsterConfiguration">
            <summary>
            Registration Mapster configurations
            </summary>
        </member>
        <member name="M:GalaxyExpress.API.Mapping.Configurations.MapsterConfiguration.RegisterMapsterConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registration Mapster configuration
            </summary>
            <param name="services">Specifies the contract for a collection of service descriptors</param>
        </member>
        <member name="T:GalaxyExpress.API.Mapping.Configurations.PaymentCardConfiguration">
            <summary>
            Registration PaymentCard configurations
            </summary>
        </member>
        <member name="M:GalaxyExpress.API.Mapping.Configurations.PaymentCardConfiguration.RegisterPaymentCardConfig">
            <summary>
            Registration PaymentCard configuration
            </summary>
        </member>
        <member name="T:GalaxyExpress.API.Mapping.Configurations.PhoneNumberConfiguration">
            <summary>
            Registration PhoneNumber configurations
            </summary>
        </member>
        <member name="M:GalaxyExpress.API.Mapping.Configurations.PhoneNumberConfiguration.RegisterPhoneNumberConfig">
            <summary>
            Registration PhoneNumber configuration
            </summary>
        </member>
        <member name="T:GalaxyExpress.API.Mapping.Configurations.UserConfiguration">
            <summary>
            Registration User configurations
            </summary>
        </member>
        <member name="M:GalaxyExpress.API.Mapping.Configurations.UserConfiguration.RegisterUserConfig">
            <summary>
            Registration User configuration
            </summary>
        </member>
    </members>
</doc>
